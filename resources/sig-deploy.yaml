apiVersion: v1
kind: Service
metadata:
  labels:
    app: sig
  name: sig-svc
  namespace: default
spec:
  type: ClusterIP
  ports:
    - port: 5000
      targetPort: 5000
  sessionAffinity: ClientIP
  selector:
    app: sig
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-sig
  namespace: default
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/subnets: 	subnet-0c1b964b7812dd512, subnet-021a53c08b0b9865d, subnet-05b587954a63c6d82, subnet-049c715b9991e8390
    #alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":443}]'
    #alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-northeast-2:675694928506:certificate/580ad154-219c-4bcd-9560-535d06351f43
    #alb.ingress.kubernetes.io/target-group-atrtributes: stickiness.enabled=true,stickiness.lb_cookie.duration_seconds=300
    alb.ingress.kubernetes.io/target-type: ip # using IP routing policy of ALB
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: sig-svc # refer to the service defined in deploy.yaml
                port:
                  number: 5000
---
apiVersion: apps/v1
kind: Deployment 
metadata:
  name: sig-deploy
  namespace: default
  labels:
    app: sig
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sig
  template:
    metadata:
      labels:
        app: sig 
    spec:
      containers:
      - name: sig-container 
        image: 675694928506.dkr.ecr.ap-northeast-2.amazonaws.com/eyestalk-python:v1.4.3
        ports:
        - containerPort: 5000
        env:
        - name: ES_IP
          value: "testing ES"
        - name: ES_PORT
          value: '9200'
        - name: SPRING_IP
          value: "back-svc"
        - name: SPRING_PORT
          value: '8080'
        - name: REDIS_IP
          value: "redis://redis-svc"
        - name: REDIS_PORT
          value: '6379'